 CREATE DATABASE Facebook
 GO
 USE Facebook
 
 CREATE TABLE  UserLogin
 (
 UserLoginID INT IDENTITY (1,1) PRIMARY KEY,
 UserName NVARCHAR(25) NOT NULL,
 Password NVARCHAR(25) NOT NULL,
 Email NVARCHAR(55) NOT NULL,
 PhoneNumber NVARCHAR(15)
 )
 
  CREATE TABLE ProfileA --I wrote ProfileA insted of  Profile because  Profile is a key word in sql
(
 ProfileID INT IDENTITY (1,1) PRIMARY KEY,
 FirstName NVARCHAR(55) NOT NULL,
 LastName NVARCHAR(55) NOT NULL,
 ProfilePic  IMAGE,
 DateOfBirth DATE NOT NULL,
 Gender VARCHAR(10) NOT NULL,
 Presentation NVARCHAR(555) NOT NULL,--in presenteton they will write litte information about themself
 DateOfRegistration DATE NOT NULL,-- time when the user account wascreated.
 LastLogin Date NOT NULL,
 UserLoginId int NOT NULL
 )
 

 
 CREATE TABLE  LikeA ( --I wrote likeA insted of like because like isa key word in sql 
 LikeID INT IDENTITY (1,1) PRIMARY KEY,
StoryId int NOT NULL,
UserLoginId int NOT NULL,
PostID int NOT NULL
 ) 
 
 CREATE TABLE Comment
 (
 CommentID INT IDENTITY (1,1) PRIMARY KEY,
 UserLoginId int NOT NULL,
 PostID int NOT NULL,
 ContexT  NVARCHAR(155) NOT NULL
 ) 
 
 CREATE TABLE NotificationA  --I wrote NotificationA  insted of Notification  because NotificationA  isa key word in sql 
 (
 NotificationID INT IDENTITY (1,1) PRIMARY KEY,
 TimeOfNotification DATETIME NOT NULL,
 Context Nvarchar(100) NOT NULL,
 ReadOrNot  varchar(5) NOT NULL, --read is for when we have some note that has been read and some has not and the answer is yes or no 
 UserLoginId int NOT NULL
 )
  CREATE TABLE MessageA  
  (
 MessageID INT IDENTITY (1,1) PRIMARY KEY,
 DAteOfMessage DATETIME NOT NULL,
 Context Nvarchar(100) NOT NULL,
 ReadOrNot varchar(5) NOT NULL,--, --read is for when we have some note that has been read and some has not and the answer is yes or no 
 UserLoginId int NOT NULL,
 NotificationId int NOT NULL
 
 ) 
  CREATE TABLE Game
  (
 GameID INT IDENTITY (1,1) PRIMARY KEY,
 DAteOfGame DATETIME NOT NULL,
 NameOfGame Nvarchar(20) NOT NULL,
 Sqore INT NOT NULL ,
 UserLoginId int NOT NULL
 ) 
  CREATE TABLE Friend
  (
 FriendID INT IDENTITY (1,1) PRIMARY KEY,
 Status  VARCHAR(20) NOT NULL,-- It is for Status:e.g.pending, accepted, blocked
 UserLoginId int NOT NULL,
 FriendProfileID int NOT NULL
 ) 
   CREATE TABLE StatPage
   (
 StatPageID INT IDENTITY (1,1) PRIMARY KEY,
 ProfileID int NOT NULL,
 FriendID int NOT NULL,
 StoryId int NOT NULL,
 MarketplaceID int NOT NULL,
 PostID int NOT NULL ,
 LikeID int NOT NULL,
 CommentID int NOT NULL
 )

 CREATE TABLE Story
 (
 StoryID INT IDENTITY (1,1) PRIMARY KEY,
 CreateTIme DATETIME NOT NULL,
 Contex NVARCHAR (100),
 NumberofLike int NOT NULL,
 NumberofCoumment int NOT NULL,
 Photo IMAGE ,
 UserLoginId int NOT NULL
 )


 CREATE TABLE  Post
 (
PostID INT IDENTITY (1,1) PRIMARY KEY,
CreateTIme DATETIME NOT NULL,
Contex NVARCHAR (100),
NumberofLike int NOT NULL,
NumberofCoumment int NOT NULL,
NumberofShare int NOT NULL,
Privacy VARCHAR(15) NOT NULL,--PRIVACY:public,friends only, private
Photo IMAGE ,
UserLoginId int NOT NULL
 )

  CREATE TABLE  Marketplace
  (
 MarketplaceID INT IDENTITY (1,1) PRIMARY KEY,
Title NVARCHAR(45)  NOT NULL,
Category NVARCHAR (100),
Price MONEY NOT NULL,
LocationA NVARCHAR (100) NOT NULL,--Location in sql is keyword that is why  i wrote  LocationA 
DescriptionOfProduct NVARCHAR (100)NOT NULL,--Description in sql are keyword that is why  i wrote DescriptionOfProduct
CONDITION VARCHAR(15) NOT NULL,
Photos IMAGE ,
AvailabilityOfProduct  NVARCHAR (10) NOT NULL,
DateOfListed DATE NOT NULL,
UserLoginId int NOT NULL
 )
 -------------------------------------------------
 --RElationship between [LikeA]] and [UserLogin]]

ALTER TABLE [dbo].[LikeA] WITH CHECK ADD CONSTRAINT FK_LikeA_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[LikeA] CHECK CONSTRAINT  FK_LikeA_UserLogin
GO
 
  --RElationship between [LikeA]] and [post]

ALTER TABLE [dbo].[LikeA] WITH CHECK ADD CONSTRAINT FK_LikeA_Post FOREIGN KEY ([PostId])
REFERENCES [dbo].[Post] ([PostId]);
GO

ALTER TABLE [dbo].[LikeA] CHECK CONSTRAINT  FK_LikeA_Post
GO
   --RElationship between [LikeA]] and [story]

ALTER TABLE [dbo].[LikeA] WITH CHECK ADD CONSTRAINT FK_LikeA_Story FOREIGN KEY ([StoryId])
REFERENCES [dbo].[Story] ([StoryId]);
GO

ALTER TABLE [dbo].[LikeA] CHECK CONSTRAINT  FK_LikeA_Story
GO
 
 -----
  --RElationship between [Comment]and [UserLogin]

ALTER TABLE [dbo].[Comment] WITH CHECK ADD CONSTRAINT FK_Comment_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[Comment] CHECK CONSTRAINT  FK_Comment_UserLogin
GO

  --RElationship between [Comment]and [Post]]

ALTER TABLE [dbo].[Comment] WITH CHECK ADD CONSTRAINT FK_Comment_Post FOREIGN KEY ([PostId])
REFERENCES [dbo].[Post] ([PostId]);
GO

ALTER TABLE [dbo].[Comment] CHECK CONSTRAINT  FK_Comment_Post
GO
---------------------------------
  --RElationship between [dbo].[Friend]and [UserLogin]

ALTER TABLE [dbo].[Friend] WITH CHECK ADD CONSTRAINT FK_Friend_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[Friend] CHECK CONSTRAINT  FK_Friend_UserLogin
GO
--  --RElationship between Story and [UserLogin]

ALTER TABLE [dbo].[Story] WITH CHECK ADD CONSTRAINT FK_Story_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[Story] CHECK CONSTRAINT  FK_Story_UserLogin
GO
--  --RElationship between Post and [UserLogin]

ALTER TABLE [dbo].[Post] WITH CHECK ADD CONSTRAINT FK_Post_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[Post] CHECK CONSTRAINT  FK_Post_UserLogin
GO
--  --RElationship between [Marketplace] and [UserLogin]

ALTER TABLE [dbo].[Marketplace] WITH CHECK ADD CONSTRAINT FK_Marketplace_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[Marketplace]  CHECK CONSTRAINT  FK_Marketplace_UserLogin
GO
--
--  --RElationship between [Game] and [UserLogin]

ALTER TABLE[dbo].[Game] WITH CHECK ADD CONSTRAINT FK_Game_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE[dbo].[Game]  CHECK CONSTRAINT  FK_Game_UserLogin
GO
--
--  --RElationship between [profile] and [UserLogin]

ALTER TABLE [dbo].[ProfileA] WITH CHECK ADD CONSTRAINT FK_ProfileA_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[ProfileA]  CHECK CONSTRAINT  FK_ProfileA_UserLogin
GO
--
--  --RElationship between [messege] and [UserLogin]

ALTER TABLE[dbo].[MessageA] WITH CHECK ADD CONSTRAINT FK_MessageA_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[MessageA]  CHECK CONSTRAINT  FK_MessageA_UserLogin
GO

--  --RElationship between [notification ] and [UserLogin]

ALTER TABLE [dbo].[NotificationA] WITH CHECK ADD CONSTRAINT FK_NotificationA_UserLogin FOREIGN KEY ([UserLoginId])
REFERENCES [dbo].[UserLogin] ([UserLoginId]);
GO

ALTER TABLE [dbo].[NotificationA]  CHECK CONSTRAINT  FK_NotificationA_UserLogin
GO


 --RElationship between [messege] and [UserLogin]

ALTER TABLE[dbo].[MessageA] WITH CHECK ADD CONSTRAINT FK_MessageA_NotificationA FOREIGN KEY ([NotificationId])
REFERENCES [dbo].[NotificationA]  ([NotificationId]);
GO

ALTER TABLE [dbo].[MessageA]  CHECK CONSTRAINT  FK_MessageA_NotificationA
GO
--RElationship between [[Friend] and [Profile]

 ALTER TABLE [dbo].[Friend] WITH CHECK ADD CONSTRAINT FK_Friend_ProfileA  FOREIGN KEY ([FriendProfileID])
REFERENCES  [dbo].[ProfileA]([ProfileID]);
GO

ALTER TABLE [dbo].[Friend]   CHECK CONSTRAINT  FK_Friend_ProfileA
GO
 
 ---------RElationship between StatPage ,Profile
 
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_ProfileA FOREIGN KEY ([ProfileID])
REFERENCES[dbo].[ProfileA] ([ProfileID]) ;
GO

ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_ProfileA
GO
 ------------------------------ -------
 --RElationship between StatPage [Friend
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_Friend FOREIGN KEY ([FriendID])
REFERENCES [dbo].[Friend] ([FriendID]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_Friend
GO
---------RElationship between StatPage Story
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_Story FOREIGN KEY ([StoryId])
REFERENCES  [dbo].[Story]([StoryId]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_Story
GO

---------RElationship between StatPage Marketplace
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_Marketplace FOREIGN KEY ([MarketplaceID])
REFERENCES [dbo].[Marketplace] ([MarketplaceID]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_Marketplace
GO

---------RElationship between StatPage AND Post
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_Post FOREIGN KEY ([PostId])
REFERENCES  [dbo].[Post]([PostId]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_Post
GO

---------RElationship between StatPage AND 
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_LikeA FOREIGN KEY ([LikeId])
REFERENCES [dbo].[LikeA] ([LikeId]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_LikeA
GO

---------RElationship between StatPage AND 
 ALTER TABLE [dbo].[StatPage] WITH CHECK ADD CONSTRAINT FK_StatPage_Comment FOREIGN KEY ([CommentID])
REFERENCES [dbo].[Comment]([CommentID]) ;
GO
ALTER TABLE [dbo].[StatPage]  CHECK CONSTRAINT  FK_StatPage_Comment
GO

----------------------------------------------------------------------
-- Inserting data into UserLogin table corresponding to the profiles
INSERT INTO UserLogin (UserName, Password, Email, PhoneNumber)
VALUES
  ('elsa_login', 'Elsa@1234', 'elsa@gmail.com', '+1234567890'),
  ('oskar_login', 'Oskar@1234', 'oskar@gmail.com', '+2345678901'),
  ('linn_login', 'Linn@1234', 'linn@gmail.com', '+3456789012'),
  ('gustav_login', 'Gustav@1234', 'gustav@gmail.com', '+4567890123'),
  ('klara_login', 'Klara@1234', 'klara@gmail.com', '+5678901234'),
  ('emil_login', 'Emil@1234', 'emil@gmail.com', '+6789012345'),
  ('sara_login', 'Sara@1234', 'sara@gmail.com', '+7890123456'),
  ('isak_login', 'Isak@1234', 'isak@gmail.com', '+8901234567'),
  ('elin_login', 'Elin@1234', 'elin@gmail.com', '+9012345678'),
  ('axel_login', 'Axel@1234', 'axel@gmail.com', '+0123456789');

 -- Inserting data into ProfileA table
INSERT INTO ProfileA (FirstName, LastName, ProfilePic, DateOfBirth, Gender, Presentation, DateOfRegistration, LastLogin, UserLoginId)
VALUES
  ('Elsa', 'Svensson', NULL, '1990-05-15', 'Female', 'Hej! Jag heter Elsa.', '2023-10-10', '2023-10-10', 1),
  ('Oskar', 'Andersson', NULL, '1992-08-20', 'Male', 'Välkommen till min profil.', '2023-10-11', '2023-10-11', 2),
  ('Linn', 'Berg', NULL, '1985-03-25', 'Female', 'Jag älskar att måla och baka.', '2023-10-12', '2023-10-12', 3),
  ('Gustav', 'Ek', NULL, '1994-11-30', 'Male', 'Hejsan! Jag är en sportälskare.', '2023-10-13', '2023-10-13', 4),
  ('Klara', 'Larsson', NULL, '1988-02-10', 'Female', 'Hälsningar från Klara.', '2023-10-14', '2023-10-14', 5),
  ('Emil', 'Karlsson', NULL, '1991-07-05', 'Male', 'En passionerad fotograf.', '2023-10-15', '2023-10-15', 6),
  ('Sara', 'Hedström', NULL, '1987-09-18', 'Female', 'Hej! Mitt intresse är resor.', '2023-10-16', '2023-10-16', 7),
  ('Isak', 'Nilsson', NULL, '1993-04-22', 'Male', 'Välkommen till min värld.', '2023-10-17', '2023-10-17', 8),
  ('Elin', 'Persson', NULL, '1996-01-12', 'Female', 'Musikälskare och bokorm.', '2023-10-18', '2023-10-18', 9),
  ('Axel', 'Lindqvist', NULL, '1986-06-28', 'Male', 'Här delar jag mina äventyr.', '2023-10-19', '2023-10-19', 10);

  -- Inserting data into Story table
INSERT INTO Story (CreateTIme, Contex, NumberofLike, NumberofCoumment, Photo, UserLoginId)
VALUES
  ('2023-10-20 08:30:00', 'This is a sample story.', 10, 5, NULL, 1),
  ('2023-10-20 09:45:00', 'Another interesting story here.', 15, 8, NULL, 2),
  ('2023-10-20 10:20:00', 'Story about my recent trip.', 20, 12, NULL, 3),
  ('2023-10-20 11:10:00', 'A funny incident from last night.', 5, 3, NULL, 4),
  ('2023-10-20 12:25:00', 'Story about my favorite book.', 18, 9, NULL, 5),
  ('2023-10-20 13:40:00', 'Memorable story from childhood.', 12, 6, NULL, 6),
  ('2023-10-20 14:15:00', 'Thought-provoking story about life.', 25, 14, NULL, 7),
  ('2023-10-20 15:05:00', 'Adventure story from a recent hike.', 8, 4, NULL, 8),
  ('2023-10-20 16:20:00', 'Story about my first job experience.', 10, 7, NULL, 9),
  ('2023-10-20 17:30:00', 'Funny incident from a family gathering.', 7, 2, NULL, 10);
  -- Inserting data into Marketplace table
INSERT INTO Marketplace (Title, Category, Price, LocationA, DescriptionOfProduct, CONDITION, Photos, AvailabilityOfProduct, DateOfListed, UserLoginId)
VALUES
  ('Vintage Table', 'Furniture', 150.00, 'Stockholm', 'A beautiful vintage table in oak wood.', 'Good Condition', NULL, 'In Stock', '2023-10-20', 1),
  ('Gaming Laptop', 'Electronics', 1200.00, 'Gothenburg', 'High-performance gaming laptop with RGB lighting.', 'Like New', NULL, 'In Stock', '2023-10-21', 2),
  ('Handcrafted Jewelry', 'Fashion', 50.00, 'Malmo', 'Handmade silver earrings with gemstones.', 'Brand New', NULL, 'In Stock', '2023-10-22', 3),
  ('Mountain Bike', 'Sports & Outdoors', 300.00, 'Uppsala', 'Hardtail mountain bike for off-road adventures.', 'Used', NULL, 'In Stock', '2023-10-23', 4),
  ('Cookware Set', 'Home & Kitchen', 80.00, 'Lund', 'Non-stick cookware set with various utensils.', 'Like New', NULL, 'In Stock', '2023-10-24', 5),
  ('Vintage Camera', 'Photography', 200.00, 'Norrkoping', 'Classic film camera in working condition.', 'Used', NULL, 'In Stock', '2023-10-25', 6),
  ('Designer Handbag', 'Fashion', 300.00, 'Vasteras', 'Luxury designer handbag in genuine leather.', 'Like New', NULL, 'In Stock', '2023-10-26', 7),
  ('Fitness Tracker', 'Electronics', 50.00, 'Linkoping', 'Track your steps, heart rate, and more.', 'Brand New', NULL, 'In Stock', '2023-10-27', 8),
  ('Antique Bookshelf', 'Furniture', 250.00, 'Orebro', 'Beautiful antique bookshelf with intricate carvings.', 'Good Condition', NULL, 'In Stock', '2023-10-28', 9),
  ('Wireless Earbuds', 'Electronics', 80.00, 'Helsingborg', 'High-quality wireless earbuds for music lovers.', 'Brand New', NULL, 'In Stock', '2023-10-29', 10);

  -- Inserting data into Post table
INSERT INTO Post (CreateTIme, Contex, NumberofLike, NumberofCoumment, NumberofShare, Privacy, Photo, UserLoginId)
VALUES
  ('2023-10-20 08:30:00', 'Enjoying a beautiful day!', 10, 5, 2, 'public', NULL, 1),
  ('2023-10-20 09:45:00', 'Trying out a new recipe.', 15, 7, 3, 'friends only', NULL, 2),
  ('2023-10-20 10:20:00', 'Exciting adventure ahead!', 20, 10, 4, 'public', NULL, 3),
  ('2023-10-20 11:10:00', 'Cherishing moments with friends.', 12, 6, 1, 'private', NULL, 4),
  ('2023-10-20 12:25:00', 'Exploring a new city.', 18, 9, 2, 'public', NULL, 5),
  ('2023-10-20 13:40:00', 'Art exhibition opening night!', 25, 12, 5, 'friends only', NULL, 6),
  ('2023-10-20 14:15:00', 'Enjoying a relaxing afternoon.', 8, 4, 0, 'private', NULL, 7),
  ('2023-10-20 15:05:00', 'Scenic mountain hike.', 22, 11, 3, 'public', NULL, 8),
  ('2023-10-20 16:20:00', 'Sunny beach day.', 30, 15, 6, 'public', NULL, 9),
  ('2023-10-20 17:30:00', 'Music concert with friends!', 28, 14, 7, 'friends only', NULL, 10);
  -- Inserting data into LikeA table
INSERT INTO LikeA (StoryId, UserLoginId, PostID)
VALUES
  (1, 1, 1),
  (2, 3, 2),
  (3, 2, 3),
  (1, 4, 4),
  (2, 5, 5),
  (3, 6, 6),
  (1, 7, 7),
  (2, 8, 8),
  (3, 9, 9),
  (1, 10, 10);
-- Inserting data into Comment table
INSERT INTO Comment (UserLoginId, PostID, ContexT)
VALUES
  (1, 1, 'Great post!'),
  (3, 2, 'Looks delicious!'),
  (2, 3, 'Amazing view!'),
  (4, 4, 'Fun times!'),
  (5, 5, 'Beautiful artwork!'),
  (6, 6, 'Looks relaxing!'),
  (7, 7, 'Love it!'),
  (8, 8, 'Breathtaking!'),
  (9, 9, 'So much fun!'),
  (10, 10, 'Rock on!');

  -- Inserting data into NotificationA table
INSERT INTO NotificationA (TimeOfNotification, Context, ReadOrNot, UserLoginId)
VALUES
  ('2023-10-20 08:30:00', 'You have a new friend request.', 'No', 1),
  ('2023-10-20 09:45:00', 'You received a message from Elsa.', 'Yes', 2),
  ('2023-10-20 10:20:00', 'Sara liked your post.', 'No', 3),
  ('2023-10-20 11:10:00', 'You have a new friend request.', 'No', 4),
  ('2023-10-20 12:25:00', 'Isak commented on your photo.', 'Yes', 5),
  ('2023-10-20 13:40:00', 'Elin liked your story.', 'No', 6),
  ('2023-10-20 14:15:00', 'You received a message from Oskar.', 'Yes', 7),
  ('2023-10-20 15:05:00', 'Gustav liked your post.', 'No', 8),
  ('2023-10-20 16:20:00', 'You have a new friend request.', 'No', 9),
  ('2023-10-20 17:30:00', 'Linn commented on your post.', 'Yes', 10);

  -- Inserting data into Game table
INSERT INTO Game (DAteOfGame, NameOfGame, Sqore, UserLoginId)
VALUES
  ('2023-10-20 08:30:00', 'Chess', 100, 1),
  ('2023-10-20 09:45:00', 'Sudoku', 200, 2),
  ('2023-10-20 10:20:00', 'FIFA 22', 300, 3),
  ('2023-10-20 11:10:00', 'Among Us', 150, 4),
  ('2023-10-20 12:25:00', 'Candy Crush', 250, 5),
  ('2023-10-20 13:40:00', 'Minecraft', 350, 6),
  ('2023-10-20 14:15:00', 'Valorant', 400, 7),
  ('2023-10-20 15:05:00', 'Fortnite', 500, 8),
  ('2023-10-20 16:20:00', 'League of Legends', 450, 9),
  ('2023-10-20 17:30:00', 'Call of Duty', 600, 10);
-- Inserting data into Friend table
INSERT INTO Friend (Status, UserLoginId, FriendProfileID)
VALUES
  ('pending', 1, 2),
  ('accepted', 2, 1),
  ('blocked', 3, 4),
  ('accepted', 4, 3),
  ('pending', 5, 6),
  ('blocked', 6, 5),
  ('accepted', 7, 8),
  ('blocked', 8, 7),
  ('pending', 9, 10),
  ('accepted', 10, 9);
-- Inserting data into MessageA table
INSERT INTO MessageA (DAteOfMessage, Context, ReadOrNot, UserLoginId, NotificationId)
VALUES
  ('2023-10-20 08:30:00', 'Hi there!', 'yes', 1, 1),
  ('2023-10-20 09:45:00', 'Good morning!', 'no', 2, 2),
  ('2023-10-20 10:20:00', 'Hello!', 'yes', 3, 3),
  ('2023-10-20 11:10:00', 'Hey!', 'yes', 4, 4),
  ('2023-10-20 12:25:00', 'Greetings!', 'no', 5, 5),
  ('2023-10-20 13:40:00', 'Hi everyone!', 'yes', 6, 6),
  ('2023-10-20 14:15:00', 'Morning!', 'yes', 7, 7),
  ('2023-10-20 15:05:00', 'Good day!', 'no', 8, 8),
  ('2023-10-20 16:20:00', 'Greetings!', 'yes', 9, 9),
  ('2023-10-20 17:30:00', 'Hello world!', 'yes', 10, 10);

  -- Inserting data into StatPage table
INSERT INTO StatPage (ProfileID, FriendID, StoryId, MarketplaceID, PostID, LikeID, CommentID)
VALUES
  (1, 2, 3, 4, 5, 6, 7),
  (2, 3, 4, 5, 6, 7, 8),
  (3, 4, 5, 6, 7, 8, 9),
  (4, 5, 6, 7, 8, 9, 10),
  (5, 6, 7, 8, 9, 10, 1),
  (6, 7, 8, 9, 10, 1, 2),
  (7, 8, 9, 10, 1, 2, 3),
  (8, 9, 10, 1, 2, 3, 4),
  (9, 10, 1, 2, 3, 4, 5),
  (10, 1, 2, 3, 4, 5, 6);
